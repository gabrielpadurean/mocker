openapi: 3.0.1
info:
  title: Mocker API
  description: API describing how to interact with the mocker application.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local URL for the application.
  - url: https://localhost:8090
    description: Alternative local URL for the application.
components:
  schemas:
    Mapping:
      properties:
        id:
          type: string
          description: Used to uniquely identify a certain mapping after it was created.
        name:
          type: string
          description: Can be used for search or as an easy way to identify the mapping.
        description:
          type: string
          description: Details explaining this mapping if necessary.
        request:
          $ref: '#/components/schemas/Request'
        response:
          $ref: '#/components/schemas/Response'
      required:
        - request
        - response
    Request:
      properties:
        endpoint:
          type: string
          description: Endpoint for which the mock is created. Can contain multiple levels using / as separator.
        method:
          type: string
          description: Http method for which the mock is created. Possible values are GET, POST, PUT, DELETE etc.
      required:
        - endpoint
        - method
    Response:
      properties:
        status:
          type: integer
          description: Http status code for the response. Possible values are 200, 404, 500 etc.
        body:
          type: string
          description: The actual content of the reponse. An example response could contain a body with a JSON, HTML etc.
        headers:
          type: array
          description: Http headers that are required for the response. Any header name is allowed.
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
      required:
        - status
        - body
tags:
- name: "Mapping"
paths:
  /v1/api/mappings:
    post:
      tags:
        - "Mapping"
      summary: Create a new mapping.
      description: Create a new mapping based on the given details (id is not required).
      requestBody:
        description: Contains details about the mapping and what request to map to a response.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mapping'
      responses:
        201:
          description: Created
          content: {}
        400:
          description: Bab Request
          content: {}
        409:
          description: Conflict
          content: {}
        500:
          description: Internal Server Error
          content: {}
    get:
      tags:
        - "Mapping"
      summary: List of the mappings or filtered list based on parameters.
      description: Returns a list of all mappings or a subset based on possible parameters using pagination.
      parameters:
        - name: name
          description: Used to filter the mappings by name.
          required: false
          in: query
          schema:
            type: string
        - name: endpoint
          description: Used to filter the mappings by endpoint.
          required: false
          in: query
          schema:
            type: string
        - name: page
          description: Pagination parameter used to specify which page to return (default 0).
          required: false
          in: query
          schema:
            type: integer
        - name: size
          description: Pagination parameter used to specify the number of results per page (default 20).
          required: false
          in: query
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mapping'
  /v1/api/mappings/{id}:
    get:
      tags:
        - "Mapping"
      summary: Get the mapping with the given id.
      description: Returns the exact mapping with the given id.
      parameters:
        - name: id
          description: Actual unique id to look for.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mapping'
        404:
          description: Not Found
          content: {}
    delete:
      tags:
        - "Mapping"
      summary: Delete the mapping with the given id.
      description: Deletes the exact mapping with the given id.
      parameters:
        - name: id
          description: Actual unique id to delete.
          required: true
          in: path
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mapping'
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - "Mapping"
      summary: Update the mapping with the given id.
      description: Will update an existing mapping identified by the id, request is idempotent.
      parameters:
        - name: id
          description: Actual unique id to look for.
          required: true
          in: path
          schema:
            type: string
      requestBody:
        description: Contains details about the mapping and what to update about it.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mapping'
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Bab Request
          content: {}
        404:
          description: Not Found
          content: {}